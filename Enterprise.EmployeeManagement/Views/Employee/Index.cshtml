@using Enterprise.EmployeeManagement.DAL.Models
@{
    ViewData["Title"] = "Employee List";
}

@if (User.IsInRole("Admin"))
{
    <a href="javascript:void(0);" onclick="openCreateModal();" class="btn btn-primary">Create an Employee</a>
}

<!-- Logout Button -->
@* <a href="javascript:void(0);" onclick="logout()" class="btn btn-danger">Logout</a> *@






<h2>Employee List</h2>

<!-- Anti-forgery token to be used in JavaScript -->
<div id="antiForgeryToken" style="display: none;">
    @Html.AntiForgeryToken()
</div>

<table id="employeeTable" style="width: 100%">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Role</th>
            <th>Email</th>
            <th>Mobile Number</th>
            @if (User.IsInRole("Admin"))
            {
                <th>Update</th>
                <th>Delete</th>
            }
            @* <th>Tasks</th> *@
        </tr>
    </thead>
    <tbody>
        <!-- Data will be dynamically inserted here -->
    </tbody>
</table>

<!-- Bootstrap Modal for Create -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Create Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createForm" method="post">
                    <p>
                        <label for="createFirstName">First Name:</label>
                        <input id="createFirstName" name="FirstName" />
                        <span id="createFirstNameValidation"></span>
                    </p>
                    <p>
                        <label for="createLastName">Last Name:</label>
                        <input id="createLastName" name="LastName" />
                        <span id="createLastNameValidation"></span>
                    </p>
                    <p>
                        <label for="createRole">Role:</label>
                        <select id="createRole" name="Role">
                            <option value="Admin">Admin</option>
                            <option value="Manager">Manager</option>
                            <option value="Employee">Employee</option>
                        </select>
                        <span id="createRoleValidation"></span>
                    </p>
                    <p>
                        <label for="createMobileNumber">Mobile Number:</label>
                        <input id="createMobileNumber" name="MobileNumber" />
                        <span id="createMobileNumberValidation"></span>
                    </p>
                    <p>
                        <label for="createEmail">Email:</label>
                        <input id="createEmail" name="Email" type="email" />
                        <span id="createEmailValidation"></span>
                    </p>
                    <p>
                        <label for="createPassword">Password:</label>
                        <input id="createPassword" name="Password" type="password" />
                        <span id="createPasswordValidation"></span>
                    </p>
                    <p><button type="submit" class="btn btn-primary">Create</button></p>
                </form>
                <div id="createResponseMessage"></div>
            </div>
        </div>
    </div>
</div>



<!-- Bootstrap Modal for Update -->
<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Update Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateForm" method="post">
                    <input id="employeeId" type="hidden" />
                    <p>
                        <label for="firstName">First Name:</label>
                        <input id="firstName" name="FirstName" />
                        <span id="firstNameValidation"></span>
                    </p>
                    <p>
                        <label for="lastName">Last Name:</label>
                        <input id="lastName" name="LastName" />
                        <span id="lastNameValidation"></span>
                    </p>
                    <p>
                        <label for="role">Role:</label>
                        <select id="role" name="Role">
                            <option value="Admin">Admin</option>
                            <option value="Manager">Manager</option>
                            <option value="Employee">Employee</option>
                        </select>
                        <span id="roleValidation"></span>
                    </p>
                    <p>
                        <label for="mobileNumber">Mobile Number:</label>
                        <input id="mobileNumber" name="MobileNumber" />
                        <span id="mobileNumberValidation"></span>
                    </p>
                    <p>
                        <label for="email">Email:</label>
                        <input id="email" name="Email" type="email" />
                        <span id="emailValidation"></span>
                    </p>
                    <p>
                        <label for="password">Password:</label>
                        <input id="password" name="Password" type="password" />
                        <span id="passwordValidation"></span>
                    </p>
                    <p><button type="submit" class="btn btn-primary">Submit</button></p>
                </form>
                <div id="responseMessage"></div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap Modal for Tasks -->
<div class="modal fade" id="tasksModal" tabindex="-1" role="dialog" aria-labelledby="tasksModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="tasksModalLabel">Assigned Tasks</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Task items will be injected here -->
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.css">
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Fetch employees and populate the table
        $(function() {
            try {
                var columns = [
                    { data: 'firstName', render: function(data) { console.log('firstName:', data); return data; } },
                    { data: 'lastName', render: function(data) { console.log('lastName:', data); return data; } },
                    { data: 'role', render: function(data) { console.log('role:', data); return data; } },
                    { data: 'email', render: function(data) { console.log('email:', data); return data; } },
                    { data: 'mobileNumber', render: function(data) { console.log('mobileNumber:', data); return data; } }
                ];

                // Only add update and delete columns for admin
                if (@Json.Serialize(User.IsInRole("Admin"))) {
                    columns.push(
                        {
                            data: 'id',
                            render: function(data) {
                                return `<a href="javascript:void(0);" onclick="openUpdateModal(${data});">Update</a>`;
                            }
                        },
                        {
                                data: 'id',
                                render: function(data) {
                                    return `
                                        <button class="btn btn-danger" onclick="deleteEmployee(${data});">Delete</button>
                                    `;
                                }
                        }
                    );
                }

                // Add tasks column for all users
                // columns.push({
                //     data: 'id',
                //     render: function(data) {
                //         return `<a href="javascript:void(0);" onclick="openTasksModal(${data});">View Tasks</a>`;
                //     }
                // });

                var table = $('#employeeTable').DataTable({
                    ajax: {
                        url: '/api/employees',
                        dataSrc: function(json) {
                            console.log('Data received:', json);
                            return json;
                        },
                        error: function(xhr, error, thrown) {
                            console.error('DataTables error:', error);
                            console.error('Details:', thrown);
                            console.error('Response:', xhr.responseText);
                        }
                    },
                    columns: columns,
                    drawCallback: function(settings) {
                        console.log('Table draw complete:', settings);
                    }
                });
            } catch(err) {
                console.error('Error initializing DataTable:', err);
            }
        });
        // Open the update modal and populate it with employee data
        function openCreateModal() {
            new bootstrap.Modal(document.getElementById('createModal')).show();
        }

        const TaskStatus = {
            NotStarted: 0,
            Working: 1,
            Pending: 2,
            Completed: 3
        };

        // Function to get the status text based on the task status
        function getStatusText(status) {
            switch (status) {
                case TaskStatus.NotStarted: return 'Not Started';
                case TaskStatus.Working: return 'Working';
                case TaskStatus.Pending: return 'Pending';
                case TaskStatus.Completed: return 'Completed';
                default: return 'Unknown';
            }
        }

               // Open the modal and populate it with tasks
        function openTasksModal(employeeId) {
            $.ajax({
                url: `/Employee/GetTasks/${employeeId}`,
                type: 'GET',
                success: function(tasks) {
                    let taskListHtml = '';

                    // Check if tasks exist
                    if (tasks && tasks.length > 0) {
                        tasks.forEach(task => {
                            taskListHtml += `
                                <div class="task-item">
                                    <h5>${task.title}</h5>
                                    <p><strong>Description:</strong> ${task.description}</p>
                                    <p><strong>Status:</strong> ${getStatusText(task.status)}</p>
                                </div>
                            `;
                        });
                    } else {
                        taskListHtml = '<p>No tasks assigned.</p>';
                    }

                    // Append tasks to the modal body
                    $('#tasksModal .modal-body').html(taskListHtml);
                    new bootstrap.Modal(document.getElementById('tasksModal')).show();
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching tasks:', error);
                    console.error('Response:', xhr.responseText);
                    // Display the error message in case the request fails
                    $('#tasksModal .modal-body').html('<p>No tasks assigned</p>');
                    new bootstrap.Modal(document.getElementById('tasksModal')).show();
                }
            });
        }


                function deleteEmployee(employeeId) {
            if (!confirm('Are you sure you want to delete this employee?')) return;

            $.ajax({
                url: `/Employee/Delete/${employeeId}`,
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    alert(response.message || 'Employee deleted successfully.');
                    $('#employeeTable').DataTable().ajax.reload();
                },
                error: function(error) {
                    alert('Error: ' + (error.responseJSON?.error || 'Failed to delete employee.'));
                }
            });
        }




        function openUpdateModal(employeeId) {
            console.log('Opening Update Modal for Employee ID:', employeeId);

            $.ajax({
                url: `/Employee/GetDetails/${employeeId}`,
                type: 'GET',
                success: function(data) {
                    // Populate the modal fields with employee data
                    $('#employeeId').val(data.id);
                    $('#firstName').val(data.firstName);
                    $('#lastName').val(data.lastName);
                    $('#role').val(data.role);
                    $('#mobileNumber').val(data.mobileNumber);
                    $('#email').val(data.email);
                    new bootstrap.Modal(document.getElementById('updateModal')).show();
                },
                error: function(error) {
                    console.error('Error fetching employee details:', error);
                    alert('Error loading employee details');
                }
            });
        }

        // Handle the update form submission
                $('#updateForm').submit(function (e) {
            e.preventDefault();
            const formData = {
                Id: parseInt($('#employeeId').val(), 10),
                FirstName: $('#firstName').val(),
                LastName: $('#lastName').val(),
                Role: $('#role').val(),
                MobileNumber: $('#mobileNumber').val(),
                Email: $('#email').val(),
                Password: $('#password').val()
            };

            $.ajax({
                url: '/Employee/Update',
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val(),
                    'Content-Type': 'application/json'
                },
                data: JSON.stringify(formData),
                success: function (response) {
                    $('#responseMessage').html('<p style="color: green;">' + response.message + '</p>');
                    setTimeout(function () {
                        const updateModalElement = document.getElementById('updateModal');
                        const updateModal = bootstrap.Modal.getInstance(updateModalElement) || new bootstrap.Modal(updateModalElement);
                        updateModal.hide();
                        $('#employeeTable').DataTable().ajax.reload();
                    }, 2000);
                },
                error: function (error) {
                    const message = error.responseJSON?.message || "An error occurred";
                    $('#responseMessage').html('<p style="color: red;">Error: ' + message + '</p>');
                }
            });
        });


        // Handle the create form submission
               $('#createForm').submit(function (e) {
            e.preventDefault();
            const formData = {
                FirstName: $('#createFirstName').val(),
                LastName: $('#createLastName').val(),
                Role: $('#createRole').val(),
                MobileNumber: $('#createMobileNumber').val(),
                Email: $('#createEmail').val(),
                Password: $('#createPassword').val()
            };

            $.ajax({
                url: '/Employee/Create',
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val(),
                    'Content-Type': 'application/json'
                },
                data: JSON.stringify(formData),
                success: function (response) {
                    $('#createResponseMessage').html('<p style="color: green;">' + response.message + '</p>');
                    setTimeout(function () {
                        const createModalElement = document.getElementById('createModal');
                        const createModal = bootstrap.Modal.getInstance(createModalElement) || new bootstrap.Modal(createModalElement);
                        createModal.hide();
                        $('#employeeTable').DataTable().ajax.reload();
                    }, 2000);
                },
                error: function (error) {
                    const message = error.responseJSON?.message || "An error occurred";
                    $('#createResponseMessage').html('<p style="color: red;">Error: ' + message + '</p>');
                }
            });
        });

        // function logout() {
        //     $.ajax({
        //         url: '/Account/Logout', Assuming this is the logout action
        //         type: 'POST',
        //         success: function(response) {
        //             Redirect to the login page after successful logout
        //             window.location.href = '/Account/Login'; Adjust according to your login page URL
        //         },
        //         error: function(error) {
        //             alert('Error logging out');
        //         }
        //     });
        // }

    </script>
}
