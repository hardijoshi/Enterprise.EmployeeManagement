@using Enterprise.EmployeeManagement.DAL.Models
@{
    ViewData["Title"] = "Employee List";
}

<a href="javascript:void(0);" onclick="openCreateModal();">Create an Employee</a>




<h2>Employee List</h2>

<!-- Anti-forgery token to be used in JavaScript -->
<div id="antiForgeryToken" style="display: none;">
    @Html.AntiForgeryToken()
</div>

<!-- Add table class for styling -->
<table id="employeeTable" class="table table-striped table-hover" style="width: 80%; margin: auto; margin-top: 20px; border-collapse: collapse;">
    <thead class="table-dark">
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Role</th>
            <th>Email</th>
            <th>Mobile Number</th>
            <th>Update</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        <!-- Data will be dynamically inserted here -->
    </tbody>
</table>


<!-- Bootstrap Modal for Create -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Create Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createForm" method="post">
                    <p>
                        <label for="createFirstName">First Name:</label>
                        <input id="createFirstName" name="FirstName" />
                        <span id="createFirstNameValidation"></span>
                    </p>
                    <p>
                        <label for="createLastName">Last Name:</label>
                        <input id="createLastName" name="LastName" />
                        <span id="createLastNameValidation"></span>
                    </p>
                    <p>
                        <label for="createRole">Role:</label>
                        <select id="createRole" name="Role">
                            <option value="Software Engineer">Software Engineer</option>
                            <option value="HR">HR</option>
                            <option value="Data Analyst">Data Analyst</option>
                        </select>
                        <span id="createRoleValidation"></span>
                    </p>
                    <p>
                        <label for="createMobileNumber">Mobile Number:</label>
                        <input id="createMobileNumber" name="MobileNumber" />
                        <span id="createMobileNumberValidation"></span>
                    </p>
                    <p>
                        <label for="createEmail">Email:</label>
                        <input id="createEmail" name="Email" type="email" />
                        <span id="createEmailValidation"></span>
                    </p>
                    <p>
                        <label for="createPassword">Password:</label>
                        <input id="createPassword" name="Password" type="password" />
                        <span id="createPasswordValidation"></span>
                    </p>
                    <p><button type="submit" class="btn btn-primary">Create</button></p>
                </form>
                <div id="createResponseMessage"></div>
            </div>
        </div>
    </div>
</div>



<!-- Bootstrap Modal for Update -->
<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Update Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateForm" method="post">
                    <input id="employeeId" type="hidden" />
                    <p>
                        <label for="firstName">First Name:</label>
                        <input id="firstName" name="FirstName" />
                        <span id="firstNameValidation"></span>
                    </p>
                    <p>
                        <label for="lastName">Last Name:</label>
                        <input id="lastName" name="LastName" />
                        <span id="lastNameValidation"></span>
                    </p>
                    <p>
                        <label for="role">Role:</label>
                        <select id="role" name="Role">
                            <option value="Software Engineer">Software Engineer</option>
                            <option value="HR">HR</option>
                            <option value="Data Analyst">Data Analyst</option>
                        </select>
                        <span id="roleValidation"></span>
                    </p>
                    <p>
                        <label for="mobileNumber">Mobile Number:</label>
                        <input id="mobileNumber" name="MobileNumber" />
                        <span id="mobileNumberValidation"></span>
                    </p>
                    <p>
                        <label for="email">Email:</label>
                        <input id="email" name="Email" type="email" />
                        <span id="emailValidation"></span>
                    </p>
                    <p>
                        <label for="password">Password:</label>
                        <input id="password" name="Password" type="password" />
                        <span id="passwordValidation"></span>
                    </p>
                    <p><button type="submit" class="btn btn-primary">Submit</button></p>
                </form>
                <div id="responseMessage"></div>
            </div>
        </div>
    </div>
</div>

<script>
    // Fetch employees and populate the table
    fetch('/api/employees')
        .then(response => response.json())
        .then(data => {
            const tableBody = document.querySelector('#employeeTable tbody');
            const antiForgeryToken = document.querySelector('#antiForgeryToken').innerHTML;

            if (data.length > 0) {
                data.forEach(employee => {
                    const row = document.createElement('tr');

                    row.innerHTML = `
                        <td>${employee.firstName}</td>
                        <td>${employee.lastName}</td>
                        <td>${employee.role}</td>
                        <td>${employee.email}</td>
                        <td>${employee.mobileNumber}</td>
                        <td><a href="javascript:void(0);" onclick="openUpdateModal(${employee.id});">Update</a></td>
                        <td>
                            <form action="/Employee/Delete" method="post"
                                  onsubmit="return confirm('Are you sure you want to delete this employee?');">
                                ${antiForgeryToken}
                                <input type="hidden" name="id" value="${employee.id}" />
                                <button type="submit">Delete</button>
                            </form>
                        </td>
                    `;

                    tableBody.appendChild(row);
                });
            } else {
                const row = document.createElement('tr');
                row.innerHTML = `<td colspan="7">No employees found.</td>`;
                tableBody.appendChild(row);
            }
        })
        .catch(error => console.error('Error fetching employee data:', error));

    // Open the update modal and populate it with employee data
    function openUpdateModal(employeeId) {
        fetch(`/Employee/GetDetails/${employeeId}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById('employeeId').value = data.id;
                document.getElementById('firstName').value = data.firstName;
                document.getElementById('lastName').value = data.lastName;
                document.getElementById('role').value = data.role;
                document.getElementById('mobileNumber').value = data.mobileNumber;
                document.getElementById('email').value = data.email;

                new bootstrap.Modal(document.getElementById('updateModal')).show();
            })
            .catch(error => {
                alert('Error loading employee details: ' + error.message);
            });
    }

    // Handle the update form submission
        document.getElementById('updateForm').addEventListener('submit', function (e) {
        e.preventDefault(); // Prevent the default form submission

        const formData = new FormData(this); // Collect form data
        const jsonData = Object.fromEntries(formData.entries()); // Convert to JSON

        // Ensure `Id` is passed as an integer
        jsonData.Id = parseInt(document.getElementById('employeeId').value, 10);

        fetch('/Employee/Update', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(jsonData), // Correctly stringify the data
        })
        .then(response => {
            if (!response.ok) {
                return response.text().then(errorText => {
                    throw new Error(errorText);
                });
            }
            return response.json();
        })
        .then(data => {
            document.getElementById('responseMessage').innerHTML =
                `<p style="color: green;">${data.message}</p>`;
        })
        .catch(error => {
            document.getElementById('responseMessage').innerHTML =
                `<p style="color: red;">Error: ${error.message}</p>`;
        });
    });



        // Function to open the Create Employee modal
    function openCreateModal() {
        new bootstrap.Modal(document.getElementById('createModal')).show();
    }


    // Handle the create form submission
    document.getElementById('createForm').addEventListener('submit', function (e) {
        e.preventDefault(); // Prevent default form submission

        const formData = new FormData(this);
        const jsonData = Object.fromEntries(formData.entries());
        const antiForgeryToken = document.querySelector('#antiForgeryToken input[name="__RequestVerificationToken"]').value;

            fetch('/Employee/Create', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': antiForgeryToken, // Include CSRF token
        },
        body: JSON.stringify(jsonData),
    })
        .then(response => {
            if (!response.ok) {
                return response.json().then(error => {
                    throw new Error(error.errors.join(', ')); // Join validation errors
                });
            }
            return response.json();
        })
        .then(data => {
            document.getElementById('createResponseMessage').innerHTML =
                `<p style="color: green;">${data.message}</p>`;
            setTimeout(() => {
                new bootstrap.Modal(document.getElementById('createModal')).hide();
                location.reload(); // Refresh the employee list
            }, 2000);
        })
        .catch(error => {
            document.getElementById('createResponseMessage').innerHTML =
                `<p style="color: red;">Error: ${error.message}</p>`;
        });
    });
   

</script>

<link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.dataTables.min.css">
<script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>

<script>
    $('#employeeTable').DataTable({
        dom: 'Bfrtip', // Define table control elements
        buttons: ['copy', 'csv', 'excel', 'pdf', 'print']
    });
</script>

